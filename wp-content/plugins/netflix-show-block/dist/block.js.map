{"version":3,"file":"block.js","mappings":"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","sources":["webpack://netflix-show-block/external window \"ReactJSXRuntime\"","webpack://netflix-show-block/webpack/bootstrap","webpack://netflix-show-block/webpack/runtime/compat get default export","webpack://netflix-show-block/webpack/runtime/define property getters","webpack://netflix-show-block/webpack/runtime/hasOwnProperty shorthand","webpack://netflix-show-block/webpack/runtime/make namespace object","webpack://netflix-show-block/./src/block.js"],"sourcesContent":["module.exports = window[\"ReactJSXRuntime\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const { registerBlockType } = wp.blocks;\r\nconst { TextControl, Button, PanelBody, PanelRow } = wp.components;\r\nconst { InspectorControls } = wp.blockEditor;\r\nconst { useState } = wp.element;\r\n\r\nregisterBlockType('nsb/netflix-show', {\r\n    title: 'Netflix Show Block',\r\n    icon: 'video-alt3',\r\n    category: 'widgets',\r\n    attributes: {\r\n        showTitle: { type: 'string' },\r\n        apiKey: { type: 'string' },\r\n        showInfo: { type: 'object' },\r\n    },\r\n\r\n    edit: (props) => {\r\n        const { attributes, setAttributes } = props;\r\n        const [loading, setLoading] = useState(false);\r\n\r\n        const fetchShowData = () => {\r\n            setLoading(true);\r\n            fetch(`https://api.themoviedb.org/3/search/tv?api_key=${attributes.apiKey}&query=${attributes.showTitle}`)\r\n                .then((response) => response.json())\r\n                .then((data) => {\r\n                    if (data.results && data.results.length > 0) {\r\n                        setAttributes({ showInfo: data.results[0] });\r\n                    } else {\r\n                        setAttributes({ showInfo: null });\r\n                        alert('Show not found!');\r\n                    }\r\n                    setLoading(false);\r\n                })\r\n                .catch(() => {\r\n                    setLoading(false);\r\n                    alert('Error fetching data');\r\n                });\r\n        };\r\n\r\n        return (\r\n            <div className=\"netflix-show-block\">\r\n                <InspectorControls>\r\n                    <PanelBody title=\"TMDb API Key\">\r\n                        <PanelRow>\r\n                            <p>\r\n                                Please enter your API Key from <a href=\"https://www.themoviedb.org/\" target=\"_blank\" rel=\"noopener noreferrer\">The Movie Database (TMDb)</a> to access show information. In your account you find the API key under Settings.\r\n                            </p>\r\n                        </PanelRow>\r\n                        <TextControl\r\n                            label=\"TMDb API Key\"\r\n                            value={attributes.apiKey}\r\n                            onChange={(value) => setAttributes({ apiKey: value })}\r\n                        />\r\n                    </PanelBody>\r\n                    <PanelBody title=\"Show Title\">\r\n                        <PanelRow>\r\n                            <p>\r\n                                Enter the title of the show you want to display. This will be used to search for the show on TMDb.\r\n                            </p>\r\n                        </PanelRow>\r\n                        <TextControl\r\n                            label=\"Show Title\"\r\n                            value={attributes.showTitle}\r\n                            onChange={(value) => setAttributes({ showTitle: value })}\r\n                        />\r\n                    </PanelBody>\r\n                </InspectorControls>\r\n                <Button className=\"fetch-button\" isPrimary onClick={fetchShowData} disabled={loading || !attributes.apiKey}>\r\n                    {loading ? 'Loading...' : 'Fetch Show Data'}\r\n                </Button>\r\n                {attributes.showInfo && (\r\n                    <div className=\"show-info\">\r\n                        <img src={`https://image.tmdb.org/t/p/w200${attributes.showInfo.poster_path}`} alt={attributes.showInfo.name} />\r\n                        <div className=\"show-details\">\r\n                            <h3>{attributes.showInfo.name}</h3>\r\n                            <p>{attributes.showInfo.overview}</p>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    },\r\n\r\n    save: () => null,\r\n});"],"names":["registerBlockType","wp","blocks","TextControl","Button","PanelBody","PanelRow","components","InspectorControls","blockEditor","useState","element","title","icon","category","attributes","showTitle","type","apiKey","showInfo","edit","props","setAttributes","loading","setLoading","fetchShowData","fetch","then","response","json","data","results","length","alert","catch","_jsxs","className","children","_jsx","href","target","rel","label","value","onChange","isPrimary","onClick","disabled","src","poster_path","alt","name","overview","save"],"sourceRoot":""}